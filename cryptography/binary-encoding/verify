#!/usr/bin/exec-suid --real -- /usr/bin/python -I
import sys
import os
import random
sys.path.append('/challenge')

def print_flag():
    try:
        with open("/flag", "r") as f:
            print(f.read())
    except FileNotFoundError:
        print("Error: Flag file not found.")

# Main function to execute the Binary encoding challenge
def play_binary_game():
    print("Welcome to the Binary Encoding Challenge!")

    print("Note: This challenge uses **uppercase letters only**. Use the binary table above or convert the ASCII value to 8-bit binary.")

    word_list = [
        "CODE",
        "BYTE",
        "DATA",
        "BITS",
        "FLAG",
        "TEXT",
        "INFO",
        "CHAR",
        "KEYS",
        "WORD"
    ]

    word_to_encode = random.choice(word_list).upper()

    print(f"\nYour task is to encode this word in **binary** (8-bit binary for each letter): {word_to_encode}\n")

    encoded_word = []

    for char in word_to_encode:
        correct_binary = format(ord(char), '08b')
        while True:
            user_input = input(f"Encode this character - {char}: ")
            if user_input == correct_binary:
                print("Correct!")
                encoded_word.append(user_input)
                break
            else:
                print("Incorrect. Try again.")
                print(f"Hint: First find ASCII value of {char}, then convert to 8-bit binary.")

    encoded_result = ' '.join(encoded_word)

    print(f"\nWell done! {word_to_encode} in binary is: {encoded_result}")
    print_flag()

# Run the game
play_binary_game()
