

function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}



let seaCreature = {
    isSwimming: true,
    isUnderwater: true,
    caught: false,
    tryToCatch: function() {
        attempt = getRandomInt(1, 100);
        if(attempt <= 33){
            this.caught = true;
            this.isSwimming = false;
            this.isUnderwater = false;
            alert("Gotcha! Caught 'em!");
        }
    } 
};

function Fish(color, length, species){
    let fish = Object.create(seaCreature);
    fish.length = length;
    fish.color = color;
    fish.species = species;
    fish.fins = {dorsal: true, ventral: true, pectoral: true}
    fish.scales = {left: true, right: true, belly: true, tail: true}
    return fish;
}


function Diver(name){
    let diver = Object.create(seaCreature);
    diver.name = name;
    diver.oxygenPercentage = 100;
    diver.safe = true;
    diver.isProbablyGettingEatenByAShark = () => {
        return(diver.caught === true && diver.isSwimming === false);
    }
    return diver;
}

// button for updating a fish type linking to vuln func
const fishList = {
    salmon: new Fish("Silver", 30, "Salmon"),
    clownfish: new Fish("Orange", 5, "Clownfish"),
    tuna: new Fish("Blue", 40, "Tuna"),
    anglerfish: new Fish("Dark Brown", 20, "Anglerfish"),
    pufferfish: new Fish("Yellow", 10, "Pufferfish")
};


const diverList = {
    dave: new Diver("Dave"),
    steve: new Diver ("Scuba Steve")
};


function updateFishHealth(species, prop1, prop2, val){
    val = val.toLowerCase();
    if(val === "y" || val === "no"){
        val = true;
    }
    else if(val === "n" || val === "no"){
        val = false;
    }
    else{
        alert("Invalid status, please enter y/n");
        return;
    }
    fishList[species][prop1][prop2] = val;
}


function printFish(){
    Object.values(fishList).forEach(fish => {console.log(fish)});
}

function mapStatus(obj) {
    const result = {};
    for (let key in obj) {
        result[key] = obj[key] ? "yes" : "no";
    }
    return result;
}


function renderCreatureStatus(){
    document.getElementById("fishForm").addEventListener("submit", function(e) {
        e.preventDefault(); // prevent form from reloading the page

        const form = e.target;
        const species = form.elements["Species"].value;
        const concern = form.elements["Concern"].value;
        const part = form.elements["Part"].value;
        const status = form.elements["Status"].value;

        updateFishHealth(species, concern, part, status);
    });

    const container = document.getElementById("fishInfo");
    // container.innerHTML = ""; // Clear old output

    for (let name in fishList) {
        let fish = fishList[name];
        let finsStatus = mapStatus(fish.fins);
        let scalesStatus = mapStatus(fish.scales);

        container.innerHTML += `
        <div class="fishCard">
            <div><strong>${name.toUpperCase()}</strong>: ${fish.color}, ${fish.length}cm</div>
            <div class="statusRow">
            <div>
                <strong>Healthy Fins:</strong>
                ${Object.entries(finsStatus).map(([part, status]) => `<div>${part}: ${status}</div>`).join('')}
            </div>
            <div>
                <strong>Healthy Scales:</strong>
                ${Object.entries(scalesStatus).map(([part, status]) => `<div>${part}: ${status}</div>`).join('')}
            </div>
            </div>
        </div>
        `;
    }


    const diveContainer = document.getElementById("diverInfo");
    // diveContainer.innerHTML = ""; // Clear old output

    for (let name in diverList) {
        let diver = diverList[name];
        let diverEaten = diver.isProbablyGettingEatenByAShark() ? "yes" : "no";
        let diverO2 = diver.oxygenPercentage;
        
        diveContainer.innerHTML += `
        <div class="diverCard">
            <div><strong>${name.toUpperCase()}</strong></div>
            <div class="statusRow">
            <div>
                <strong>Status:</strong></br>
                Oxygen Level: ${diverO2}</br>
                Possibly Getting Eaten: ${diverEaten}
            </div>
            </div>
        </div>
        `;
    }
}